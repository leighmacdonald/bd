// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package store

import (
	"database/sql"
	"time"
)

type Config struct {
	SteamID                 string `json:"steam_id"`
	SteamDir                string `json:"steam_dir"`
	Tf2Dir                  string `json:"tf2_dir"`
	AutoLaunchGame          bool   `json:"auto_launch_game"`
	AutoCloseOnGameExit     bool   `json:"auto_close_on_game_exit"`
	BdApiEnabled            bool   `json:"bd_api_enabled"`
	BdApiAddress            string `json:"bd_api_address"`
	ApiKey                  string `json:"api_key"`
	SystrayEnabled          bool   `json:"systray_enabled"`
	DisconnectedTimeout     int64  `json:"disconnected_timeout"`
	DiscordPresenceEnabled  bool   `json:"discord_presence_enabled"`
	KickerEnabled           bool   `json:"kicker_enabled"`
	ChatWarningsEnabled     bool   `json:"chat_warnings_enabled"`
	VoiceBansEnabled        bool   `json:"voice_bans_enabled"`
	DebugLogEnabled         bool   `json:"debug_log_enabled"`
	RconStatic              bool   `json:"rcon_static"`
	HttpEnabled             bool   `json:"http_enabled"`
	HttpListenAddr          string `json:"http_listen_addr"`
	PlayerExpiredTimeout    int64  `json:"player_expired_timeout"`
	PlayerDisconnectTimeout int64  `json:"player_disconnect_timeout"`
	RunMode                 string `json:"run_mode"`
	LogLevel                string `json:"log_level"`
	RconAddress             string `json:"rcon_address"`
	RconPort                int64  `json:"rcon_port"`
	RconPassword            string `json:"rcon_password"`
}

type Link struct {
	LinkID    int64     `json:"link_id"`
	Name      string    `json:"name"`
	Url       string    `json:"url"`
	IDFormat  string    `json:"id_format"`
	Enabled   bool      `json:"enabled"`
	CreatedOn time.Time `json:"created_on"`
	UpdatedOn time.Time `json:"updated_on"`
}

type List struct {
	ListID    int64     `json:"list_id"`
	ListType  int64     `json:"list_type"`
	Url       string    `json:"url"`
	Enabled   bool      `json:"enabled"`
	UpdatedOn time.Time `json:"updated_on"`
	CreatedOn time.Time `json:"created_on"`
	Name      string    `json:"name"`
}

type Player struct {
	SteamID          int64        `json:"steam_id"`
	Personaname      string       `json:"personaname"`
	Visibility       int64        `json:"visibility"`
	RealName         string       `json:"real_name"`
	AccountCreatedOn time.Time    `json:"account_created_on"`
	AvatarHash       string       `json:"avatar_hash"`
	CommunityBanned  bool         `json:"community_banned"`
	GameBans         int64        `json:"game_bans"`
	VacBans          int64        `json:"vac_bans"`
	LastVacBanOn     sql.NullTime `json:"last_vac_ban_on"`
	KillsOn          int64        `json:"kills_on"`
	DeathsBy         int64        `json:"deaths_by"`
	RageQuits        int64        `json:"rage_quits"`
	Notes            string       `json:"notes"`
	Whitelist        bool         `json:"whitelist"`
	ProfileUpdatedOn time.Time    `json:"profile_updated_on"`
	CreatedOn        time.Time    `json:"created_on"`
	UpdatedOn        time.Time    `json:"updated_on"`
}

type PlayerFriend struct {
	SteamID       int64     `json:"steam_id"`
	SteamIDFriend int64     `json:"steam_id_friend"`
	FriendSince   time.Time `json:"friend_since"`
	CreatedOn     time.Time `json:"created_on"`
}

type PlayerMessage struct {
	MessageID int64     `json:"message_id"`
	SteamID   int64     `json:"steam_id"`
	Message   string    `json:"message"`
	Team      bool      `json:"team"`
	Dead      bool      `json:"dead"`
	CreatedOn time.Time `json:"created_on"`
}

type PlayerName struct {
	NameID    int64     `json:"name_id"`
	SteamID   int64     `json:"steam_id"`
	Name      string    `json:"name"`
	CreatedOn time.Time `json:"created_on"`
}

type PlayerSourceban struct {
	SourcebansID int64     `json:"sourcebans_id"`
	SteamID      int64     `json:"steam_id"`
	Site         string    `json:"site"`
	PlayerName   string    `json:"player_name"`
	Reason       string    `json:"reason"`
	Duration     int64     `json:"duration"`
	Permanent    bool      `json:"permanent"`
	CreatedOn    time.Time `json:"created_on"`
}
